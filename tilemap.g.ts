// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . 2 2 2 2 2 . . . . . . 
. . . . . . 2 2 2 2 2 . . . . . 
. . . . . . . . 2 2 2 2 . . . . 
2 2 . . . . . 2 2 2 2 . . . . . 
. 2 . . . . . 2 2 2 . . . . . . 
. . . . . . . 2 2 2 . . . . . . 
. 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. 2 . . . . 2 2 2 2 . . . . . . 
. . . . . . 2 2 2 2 . . . . . . 
. 2 . . . . 2 2 2 2 . . . . . . 
2 2 . . . . 2 2 2 2 . . . . . . 
. . . . . . 2 2 2 2 . . . . . . 
. . . . . . 2 2 2 2 . . . . . . 
. . . . . . . 2 2 2 2 . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.dungeon.collectibleInsignia,sprites.castle.tileGrass1,sprites.castle.tilePath5,sprites.dungeon.darkGroundCenter,sprites.castle.saplingOak,sprites.castle.tileGrass2], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`1000100004040404030205020203040404040404040404040302020202030404040404040404040404030202030404040404040401040101010102020101010404010101010101010101010101010101040101010606060606060606060601010101010109090b090909070909070806060709090707070707090707090909090907070909090909070909090907070709090b09070707090707070707070907070707070a090909090909090907090709090909070907070709070707070907090707070709070909090a0907090907090b0909070907070707070907070707070707070707070909090909090909090909090709090707070707090707070707090907`, img`
2 2 2 2 2 . . . . 2 2 2 2 2 2 2 
2 2 2 2 2 . . . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 . . 2 2 2 2 2 2 2 2 
. 2 . . . . . . . . . 2 2 . . . 
. . . . . . . . . . . . 2 . . . 
. . . . . . . . . . . . . . . . 
2 2 . 2 2 2 . 2 2 . . . . . 2 2 
. . . . . 2 . . 2 2 2 2 2 . . 2 
2 2 2 2 . 2 2 . 2 . . . 2 2 . 2 
. . . . . . . . . . 2 . . . . . 
. 2 2 2 2 2 2 2 2 . 2 . 2 2 2 2 
. 2 . . . 2 . . . . 2 . 2 . . . 
. 2 . 2 2 2 . 2 . 2 2 . 2 . 2 2 
. 2 . . . . . 2 . . . . . . . . 
. . . 2 2 2 2 2 2 2 2 2 . 2 2 . 
2 2 . . . . . . . . . . . 2 2 . 
`, [myTiles.transparency16,sprites.castle.tilePath5,sprites.dungeon.chestClosed,sprites.builtin.brick,sprites.dungeon.collectibleInsignia,sprites.dungeon.collectibleRedCrystal,sprites.castle.tilePath8,sprites.castle.tileGrass1,sprites.castle.tilePath7,sprites.builtin.forestTiles0,sprites.dungeon.stairSouth,sprites.dungeon.stairNorth], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1000100000010000000101010000000000000000000001010101010101010101000000000000010000000000010101010101000001010101010101010100000101000101010100000000000001010000010000010101000000000000000100010000000101010000000000000001010101010101010001000001010000010101000001010100010100000001010101000000010101010101010101010101000000000100010101010100000001010100000101000001010101000000010101000001010000000001010101010101010001000100000101000001010101010101010100000000010101010101010101010101000000000000000101010000010100000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.forestTiles0], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tilePath5], TileScale.Sixteen);
            case "level":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . 2 2 . . . . . 
. 2 2 . . . . . . . 2 2 . . . . 
. . . . . . 2 . . . . . . . . . 
. . . . . . 2 . . . . . . . . . 
. . . 2 2 2 2 . . . . . . . . . 
. . . . . . . . . 2 2 . . 2 . . 
. . . 2 2 2 2 . . 2 . . 2 2 . . 
. . . . . . 2 . . 2 . . 2 2 . . 
2 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 . 2 2 . . 2 2 . . . . . . 
. . . . 2 2 . . 2 2 . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 2 . . . . . . . 2 2 . . . 
. . . 2 2 2 . . . . . 2 . . . . 
. . . 2 . . . . . . . 2 . . . . 
`, [myTiles.transparency16,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
